name: SYSARCH-ACS Integration Build

on:
  push:
    branches:                # trigger on push to master
      - main
  pull_request:              # trigger on pull requests to master
    branches:
      - main
  workflow_dispatch:         # to dispatch from Github Actions

jobs:
  build_acpi:
    name: BSA-ACS UEFI build for ACPI target
    runs-on: ubuntu-22.04

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y git build-essential nasm

      - name: Download edk2 and its submodules
        run: |
          git clone --recursive https://github.com/tianocore/edk2
          cd edk2
          git checkout edk2-stable202411
          cd ..
          git clone https://github.com/tianocore/edk2-libc edk2/edk2-libc

      - name: Checkout sysarch-acs repository
        uses: actions/checkout@v4
        with:
          path: 'edk2/ShellPkg/Application/sysarch-acs'

      - name: Apply edk2 BSA patch for ACPI target
        run: |
          cd edk2
          git apply ShellPkg/Application/sysarch-acs/patches/edk2_bsa_acpi.patch

      - name: Download Arm GCC cross-compiler
        run: |
          mkdir -p /opt/cross
          cd /opt/cross
          wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz

      - name: Set up EDK2 environment and build Bsa.efi
        run: |
          cd edk2
          export GCC49_AARCH64_PREFIX=/opt/cross/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
          export PACKAGES_PATH=$PWD/edk2-libc
          source edksetup.sh
          make -C BaseTools/Source/C
          source ShellPkg/Application/sysarch-acs/tools/scripts/acsbuild.sh bsa
      - name: Save Bsa.efi as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: Bsa_acpi_target.efi
          path: edk2/Build/Shell/DEBUG_GCC49/AARCH64/Bsa.efi
          if-no-files-found: error

  build_dt:
    name: BSA-ACS UEFI build for DT target
    runs-on: ubuntu-22.04

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y git build-essential nasm

      - name: Download edk2 and its submodules
        run: |
          git clone --recursive https://github.com/tianocore/edk2
          cd edk2
          git checkout edk2-stable202411
          cd ..
          git clone https://github.com/tianocore/edk2-libc edk2/edk2-libc

      - name: Checkout sysarch-acs repository
        uses: actions/checkout@v4
        with:
          path: 'edk2/ShellPkg/Application/sysarch-acs'

      - name: Apply edk2 BSA patch for DT target
        run: |
          cd edk2
          git apply ShellPkg/Application/sysarch-acs/patches/edk2_bsa_dt.patch

      - name: Download Arm GCC cross-compiler
        run: |
          mkdir -p /opt/cross
          cd /opt/cross
          wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz

      - name: Set up EDK2 environment and build Bsa.efi
        run: |
          cd edk2
          export GCC49_AARCH64_PREFIX=/opt/cross/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
          export PACKAGES_PATH=$PWD/edk2-libc
          source edksetup.sh
          make -C BaseTools/Source/C
          source ShellPkg/Application/sysarch-acs/tools/scripts/acsbuild.sh bsa_dt
      - name: Save Bsa.efi as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: Bsa_dt_target.efi
          path: edk2/Build/Shell/DEBUG_GCC49/AARCH64/Bsa.efi
          if-no-files-found: error

  build_sbsa_acpi:
    name: SBSA-ACS UEFI build for ACPI target
    runs-on: ubuntu-22.04

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y git build-essential nasm

      - name: Download edk2 and its submodules
        run: |
          git clone --recursive https://github.com/tianocore/edk2
          cd edk2
          git checkout edk2-stable202411
          cd ..
          git clone https://github.com/tianocore/edk2-libc edk2/edk2-libc

      - name: Checkout sysarch-acs repository
        uses: actions/checkout@v4
        with:
          path: 'edk2/ShellPkg/Application/sysarch-acs'

      - name: Apply edk2 sbsa patch
        run: |
          cd edk2
          git apply ShellPkg/Application/sysarch-acs/patches/edk2_sbsa.patch

      - name: Download Arm GCC cross-compiler
        run: |
          mkdir -p /opt/cross
          cd /opt/cross
          wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz

      - name: Set up EDK2 environment and build Sbsa.efi
        run: |
          cd edk2
          export GCC49_AARCH64_PREFIX=/opt/cross/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
          export PACKAGES_PATH=$PWD/edk2-libc
          source edksetup.sh
          make -C BaseTools/Source/C
          source ShellPkg/Application/sysarch-acs/tools/scripts/acsbuild.sh sbsa
          ls Build/Shell/DEBUG_GCC49/AARCH64/Sbsa.efi
      - name: Save Sbsa.efi as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: Sbsa.efi
          path: edk2/Build/Shell/DEBUG_GCC49/AARCH64/Sbsa.efi
          if-no-files-found: error

  build_drtm_acpi:
    name: DRTM-ACS UEFI build for ACPI target
    runs-on: ubuntu-22.04

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y git build-essential nasm

      - name: Download edk2 and its submodules
        run: |
          git clone --recursive https://github.com/tianocore/edk2
          cd edk2
          git checkout edk2-stable202411
          cd ..
          git clone https://github.com/tianocore/edk2-libc edk2/edk2-libc

      - name: Checkout sysarch-acs repository
        uses: actions/checkout@v4
        with:
          path: 'edk2/ShellPkg/Application/sysarch-acs'

      - name: Apply edk2 DRTM patch for ACPI target
        run: |
          cd edk2
          git apply ShellPkg/Application/sysarch-acs/patches/edk2_drtm.patch

      - name: Download Arm GCC cross-compiler
        run: |
          mkdir -p /opt/cross
          cd /opt/cross
          wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz

      - name: Set up EDK2 environment and build Drtm.efi
        run: |
          cd edk2
          export GCC49_AARCH64_PREFIX=/opt/cross/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
          export PACKAGES_PATH=$PWD/edk2-libc
          source edksetup.sh
          make -C BaseTools/Source/C
          source ShellPkg/Application/sysarch-acs/tools/scripts/acsbuild.sh drtm
      - name: Save Drtm.efi as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: Drtm_acpi_target.efi
          path: edk2/Build/Shell/DEBUG_GCC49/AARCH64/Drtm.efi
          if-no-files-found: error

  build_mpam_acpi:
    name: MPAM-ACS UEFI build for ACPI target
    runs-on: ubuntu-22.04

    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y git build-essential nasm

      - name: Download edk2 and its submodules
        run: |
          git clone --recursive https://github.com/tianocore/edk2
          cd edk2
          git checkout edk2-stable202411
          cd ..
          git clone https://github.com/tianocore/edk2-libc edk2/edk2-libc

      - name: Checkout sysarch-acs repository
        uses: actions/checkout@v4
        with:
          path: 'edk2/ShellPkg/Application/sysarch-acs'

      - name: Apply edk2 MPAM patch for ACPI target
        run: |
          cd edk2
          git apply ShellPkg/Application/sysarch-acs/patches/edk2_mpam.patch

      - name: Download Arm GCC cross-compiler
        run: |
          mkdir -p /opt/cross
          cd /opt/cross
          wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz

      - name: Set up EDK2 environment and build Mpam.efi
        run: |
          cd edk2
          export GCC49_AARCH64_PREFIX=/opt/cross/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
          export PACKAGES_PATH=$PWD/edk2-libc
          source edksetup.sh
          make -C BaseTools/Source/C
          source ShellPkg/Application/sysarch-acs/tools/scripts/acsbuild.sh mpam
      - name: Save Mpam.efi as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mpam_acpi_target.efi
          path: edk2/Build/Shell/DEBUG_GCC49/AARCH64/Mpam.efi
          if-no-files-found: error

  bsa-baremetal-compilation:
    name: BSA Baremetal CMake compilation check
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout sysarch-acs repository
        uses: actions/checkout@v4

      - name: Remove build folder if present in sysarch-acs
        run: |
              rm -rf build

      - name: Download Arm GCC cross-compiler
        run: |
              mkdir -p /opt/cross
              cd /opt/cross
              wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-elf.tar.xz
              tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-elf.tar.xz

      - name: Compile BSA Baremetal ACS for RDN2 Platform
        run: |
              export CROSS_COMPILE=/opt/cross/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-elf/bin/aarch64-none-elf-
              mkdir build
              cd build
              cmake ../ -G "Unix Makefiles" -DTARGET=RDN2
              make bsa

      - name: Save Baremetel bsa.bin as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: Bsa_baremetal_RDN2.bin
          path: build/bsa_build/output/bsa.bin
          if-no-files-found: error

  sbsa-baremetal-compilation:
    name: SBSA-ACS Baremetal CMake compilation 
    runs-on: ubuntu-22.04

    steps:

      - name: Checkout sysarch-acs repository
        uses: actions/checkout@v4

      - name: Remove build folder if present in sysarch-acs
        run: |
              rm -rf build

      - name: Download Arm GCC cross-compiler
        run: |
              mkdir -p /opt/cross
              cd /opt/cross
              wget https://developer.arm.com/-/media/Files/downloads/gnu/13.2.rel1/binrel/arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-elf.tar.xz
              tar -xf arm-gnu-toolchain-13.2.rel1-x86_64-aarch64-none-elf.tar.xz

      - name: Compile SBSA Baremetal ACS for RDN2 Platform
        run: |
              export CROSS_COMPILE=/opt/cross/arm-gnu-toolchain-13.2.Rel1-x86_64-aarch64-none-elf/bin/aarch64-none-elf-
              mkdir build
              cd build
              cmake ../ -G "Unix Makefiles" -DTARGET=RDN2
              make sbsa


      - name: Save Baremetel sbsa.bin as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: Sbsa_baremetal_RDN2.bin
          path: build/sbsa_build/output/sbsa.bin
          if-no-files-found: error
